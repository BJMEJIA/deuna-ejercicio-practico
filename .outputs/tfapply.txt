[0m[1mmodule.kms.data.aws_caller_identity.current: Reading...[0m[0m
[0m[1mmodule.kms.data.aws_caller_identity.current: Read complete after 1s [id=842675974385][0m
[0m[1mmodule.kms.data.aws_iam_policy_document.kms_policy: Reading...[0m[0m
[0m[1mmodule.kms.data.aws_iam_policy_document.kms_policy: Read complete after 0s [id=2886803126][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # module.aurora-postgresql.aws_rds_cluster.postgresql[0m will be created
[0m  [32m+[0m[0m resource "aws_rds_cluster" "postgresql" {
      [32m+[0m[0m allocated_storage                     = (known after apply)
      [32m+[0m[0m apply_immediately                     = (known after apply)
      [32m+[0m[0m arn                                   = (known after apply)
      [32m+[0m[0m availability_zones                    = (known after apply)
      [32m+[0m[0m backup_retention_period               = (known after apply)
      [32m+[0m[0m ca_certificate_identifier             = (known after apply)
      [32m+[0m[0m ca_certificate_valid_till             = (known after apply)
      [32m+[0m[0m cluster_identifier                    = "aurora-postgresql-deuna"
      [32m+[0m[0m cluster_identifier_prefix             = (known after apply)
      [32m+[0m[0m cluster_members                       = (known after apply)
      [32m+[0m[0m cluster_resource_id                   = (known after apply)
      [32m+[0m[0m cluster_scalability_type              = (known after apply)
      [32m+[0m[0m copy_tags_to_snapshot                 = false
      [32m+[0m[0m database_insights_mode                = (known after apply)
      [32m+[0m[0m database_name                         = "db_database_deuna"
      [32m+[0m[0m db_cluster_parameter_group_name       = (known after apply)
      [32m+[0m[0m db_subnet_group_name                  = (known after apply)
      [32m+[0m[0m db_system_id                          = (known after apply)
      [32m+[0m[0m delete_automated_backups              = true
      [32m+[0m[0m enable_global_write_forwarding        = false
      [32m+[0m[0m enable_http_endpoint                  = false
      [32m+[0m[0m enable_local_write_forwarding         = false
      [32m+[0m[0m endpoint                              = (known after apply)
      [32m+[0m[0m engine                                = "aurora-postgresql"
      [32m+[0m[0m engine_lifecycle_support              = (known after apply)
      [32m+[0m[0m engine_mode                           = "provisioned"
      [32m+[0m[0m engine_version                        = (known after apply)
      [32m+[0m[0m engine_version_actual                 = (known after apply)
      [32m+[0m[0m hosted_zone_id                        = (known after apply)
      [32m+[0m[0m iam_roles                             = (known after apply)
      [32m+[0m[0m id                                    = (known after apply)
      [32m+[0m[0m kms_key_id                            = (known after apply)
      [32m+[0m[0m manage_master_user_password           = true
      [32m+[0m[0m master_password_wo                    = (write-only attribute)
      [32m+[0m[0m master_user_secret                    = (known after apply)
      [32m+[0m[0m master_user_secret_kms_key_id         = (known after apply)
      [32m+[0m[0m master_username                       = "pgadmin"
      [32m+[0m[0m monitoring_interval                   = (known after apply)
      [32m+[0m[0m monitoring_role_arn                   = (known after apply)
      [32m+[0m[0m network_type                          = (known after apply)
      [32m+[0m[0m performance_insights_kms_key_id       = (known after apply)
      [32m+[0m[0m performance_insights_retention_period = (known after apply)
      [32m+[0m[0m port                                  = (known after apply)
      [32m+[0m[0m preferred_backup_window               = (known after apply)
      [32m+[0m[0m preferred_maintenance_window          = (known after apply)
      [32m+[0m[0m reader_endpoint                       = (known after apply)
      [32m+[0m[0m skip_final_snapshot                   = true
      [32m+[0m[0m storage_encrypted                     = (known after apply)
      [32m+[0m[0m storage_type                          = (known after apply)
      [32m+[0m[0m tags                                  = {
          [32m+[0m[0m "app" = "deuna"
          [32m+[0m[0m "env" = "development"
        }
      [32m+[0m[0m tags_all                              = {
          [32m+[0m[0m "app" = "deuna"
          [32m+[0m[0m "env" = "development"
        }
      [32m+[0m[0m vpc_security_group_ids                = (known after apply)
    }

[1m  # module.aurora-postgresql.aws_rds_cluster_instance.cluster_instance[0][0m will be created
[0m  [32m+[0m[0m resource "aws_rds_cluster_instance" "cluster_instance" {
      [32m+[0m[0m apply_immediately                     = (known after apply)
      [32m+[0m[0m arn                                   = (known after apply)
      [32m+[0m[0m auto_minor_version_upgrade            = true
      [32m+[0m[0m availability_zone                     = (known after apply)
      [32m+[0m[0m ca_cert_identifier                    = (known after apply)
      [32m+[0m[0m cluster_identifier                    = (known after apply)
      [32m+[0m[0m copy_tags_to_snapshot                 = false
      [32m+[0m[0m db_parameter_group_name               = (known after apply)
      [32m+[0m[0m db_subnet_group_name                  = (known after apply)
      [32m+[0m[0m dbi_resource_id                       = (known after apply)
      [32m+[0m[0m endpoint                              = (known after apply)
      [32m+[0m[0m engine                                = "aurora-postgresql"
      [32m+[0m[0m engine_version                        = (known after apply)
      [32m+[0m[0m engine_version_actual                 = (known after apply)
      [32m+[0m[0m force_destroy                         = false
      [32m+[0m[0m id                                    = (known after apply)
      [32m+[0m[0m identifier                            = "aurora-postgresql-deuna-instance-1"
      [32m+[0m[0m identifier_prefix                     = (known after apply)
      [32m+[0m[0m instance_class                        = "db.r6g.large"
      [32m+[0m[0m kms_key_id                            = (known after apply)
      [32m+[0m[0m monitoring_interval                   = 0
      [32m+[0m[0m monitoring_role_arn                   = (known after apply)
      [32m+[0m[0m network_type                          = (known after apply)
      [32m+[0m[0m performance_insights_enabled          = (known after apply)
      [32m+[0m[0m performance_insights_kms_key_id       = (known after apply)
      [32m+[0m[0m performance_insights_retention_period = (known after apply)
      [32m+[0m[0m port                                  = (known after apply)
      [32m+[0m[0m preferred_backup_window               = (known after apply)
      [32m+[0m[0m preferred_maintenance_window          = (known after apply)
      [32m+[0m[0m promotion_tier                        = 0
      [32m+[0m[0m publicly_accessible                   = (known after apply)
      [32m+[0m[0m storage_encrypted                     = (known after apply)
      [32m+[0m[0m tags                                  = {
          [32m+[0m[0m "app" = "deuna"
          [32m+[0m[0m "env" = "development"
        }
      [32m+[0m[0m tags_all                              = {
          [32m+[0m[0m "app" = "deuna"
          [32m+[0m[0m "env" = "development"
        }
      [32m+[0m[0m writer                                = (known after apply)
    }

[1m  # module.kms.aws_kms_key.kms_key[0m will be created
[0m  [32m+[0m[0m resource "aws_kms_key" "kms_key" {
      [32m+[0m[0m arn                                = (known after apply)
      [32m+[0m[0m bypass_policy_lockout_safety_check = false
      [32m+[0m[0m customer_master_key_spec           = "SYMMETRIC_DEFAULT"
      [32m+[0m[0m deletion_window_in_days            = 20
      [32m+[0m[0m description                        = "KMS para deuna"
      [32m+[0m[0m enable_key_rotation                = true
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m is_enabled                         = true
      [32m+[0m[0m key_id                             = (known after apply)
      [32m+[0m[0m key_usage                          = "ENCRYPT_DECRYPT"
      [32m+[0m[0m multi_region                       = (known after apply)
      [32m+[0m[0m policy                             = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = "kms:*"
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Principal = {
                          [32m+[0m[0m AWS = "arn:aws:iam::842675974385:root"
                        }
                      [32m+[0m[0m Resource  = "*"
                      [32m+[0m[0m Sid       = "EnableIAMUserPermissions"
                    },
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = [
                          [32m+[0m[0m "kms:Update*",
                          [32m+[0m[0m "kms:ScheduleKeyDeletion",
                          [32m+[0m[0m "kms:Revoke*",
                          [32m+[0m[0m "kms:ReplicateKey",
                          [32m+[0m[0m "kms:Put*",
                          [32m+[0m[0m "kms:List*",
                          [32m+[0m[0m "kms:Get*",
                          [32m+[0m[0m "kms:Enable*",
                          [32m+[0m[0m "kms:Disable*",
                          [32m+[0m[0m "kms:Describe*",
                          [32m+[0m[0m "kms:Delete*",
                          [32m+[0m[0m "kms:Create*",
                          [32m+[0m[0m "kms:CancelKeyDeletion",
                        ]
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Principal = {
                          [32m+[0m[0m AWS = "arn:aws:iam::842675974385:user/Josue.Mejia"
                        }
                      [32m+[0m[0m Resource  = "*"
                      [32m+[0m[0m Sid       = "AllowAdministration"
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m rotation_period_in_days            = (known after apply)
      [32m+[0m[0m tags                               = {
          [32m+[0m[0m "app" = "deuna"
          [32m+[0m[0m "env" = "development"
        }
      [32m+[0m[0m tags_all                           = {
          [32m+[0m[0m "app" = "deuna"
          [32m+[0m[0m "env" = "development"
        }
    }

[1m  # module.s3_bucket.aws_s3_bucket.s3_bucket[0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket" "s3_bucket" {
      [32m+[0m[0m acceleration_status         = (known after apply)
      [32m+[0m[0m acl                         = (known after apply)
      [32m+[0m[0m arn                         = (known after apply)
      [32m+[0m[0m bucket                      = "deuna-iac-bucket"
      [32m+[0m[0m bucket_domain_name          = (known after apply)
      [32m+[0m[0m bucket_prefix               = (known after apply)
      [32m+[0m[0m bucket_regional_domain_name = (known after apply)
      [32m+[0m[0m force_destroy               = false
      [32m+[0m[0m hosted_zone_id              = (known after apply)
      [32m+[0m[0m id                          = (known after apply)
      [32m+[0m[0m object_lock_enabled         = (known after apply)
      [32m+[0m[0m policy                      = (known after apply)
      [32m+[0m[0m region                      = (known after apply)
      [32m+[0m[0m request_payer               = (known after apply)
      [32m+[0m[0m tags                        = {
          [32m+[0m[0m "app" = "deuna"
          [32m+[0m[0m "env" = "development"
        }
      [32m+[0m[0m tags_all                    = {
          [32m+[0m[0m "app" = "deuna"
          [32m+[0m[0m "env" = "development"
        }
      [32m+[0m[0m website_domain              = (known after apply)
      [32m+[0m[0m website_endpoint            = (known after apply)

      [32m+[0m[0m cors_rule (known after apply)

      [32m+[0m[0m grant (known after apply)

      [32m+[0m[0m lifecycle_rule (known after apply)

      [32m+[0m[0m logging (known after apply)

      [32m+[0m[0m object_lock_configuration (known after apply)

      [32m+[0m[0m replication_configuration (known after apply)

      [32m+[0m[0m server_side_encryption_configuration (known after apply)

      [32m+[0m[0m versioning (known after apply)

      [32m+[0m[0m website (known after apply)
    }

[1m  # module.s3_bucket.aws_s3_bucket_object_lock_configuration.s3_object_lock[0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket_object_lock_configuration" "s3_object_lock" {
      [32m+[0m[0m bucket              = (known after apply)
      [32m+[0m[0m id                  = (known after apply)
      [32m+[0m[0m object_lock_enabled = "Enabled"

      [32m+[0m[0m rule {
          [32m+[0m[0m default_retention {
              [32m+[0m[0m days = 5
              [32m+[0m[0m mode = "COMPLIANCE"
            }
        }
    }

[1m  # module.s3_bucket.aws_s3_bucket_policy.ssl_only_policy[0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket_policy" "ssl_only_policy" {
      [32m+[0m[0m bucket = (known after apply)
      [32m+[0m[0m id     = (known after apply)
      [32m+[0m[0m policy = (known after apply)
    }

[1m  # module.s3_bucket.aws_s3_bucket_public_access_block.s3_public_block[0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket_public_access_block" "s3_public_block" {
      [32m+[0m[0m block_public_acls       = true
      [32m+[0m[0m block_public_policy     = true
      [32m+[0m[0m bucket                  = (known after apply)
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m ignore_public_acls      = true
      [32m+[0m[0m restrict_public_buckets = true
    }

[1m  # module.s3_bucket.aws_s3_bucket_server_side_encryption_configuration.s3_encryption[0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket_server_side_encryption_configuration" "s3_encryption" {
      [32m+[0m[0m bucket = (known after apply)
      [32m+[0m[0m id     = (known after apply)

      [32m+[0m[0m rule {
          [32m+[0m[0m apply_server_side_encryption_by_default {
              [32m+[0m[0m kms_master_key_id = (known after apply)
              [32m+[0m[0m sse_algorithm     = "aws:kms"
            }
        }
    }

[1m  # module.s3_bucket.aws_s3_bucket_versioning.s3_versioning[0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket_versioning" "s3_versioning" {
      [32m+[0m[0m bucket = (known after apply)
      [32m+[0m[0m id     = (known after apply)

      [32m+[0m[0m versioning_configuration {
          [32m+[0m[0m mfa_delete = (known after apply)
          [32m+[0m[0m status     = "Enabled"
        }
    }

[1mPlan:[0m 9 to add, 0 to change, 0 to destroy.
[0m
Changes to Outputs:
  [32m+[0m[0m kms_key_arn          = (known after apply)
  [32m+[0m[0m rds_cluster_endpoint = (known after apply)
  [32m+[0m[0m rds_secret_arn       = (known after apply)
  [32m+[0m[0m s3_bucket_name       = (known after apply)
[0m[1mmodule.kms.aws_kms_key.kms_key: Creating...[0m[0m
[0m[1mmodule.s3_bucket.aws_s3_bucket.s3_bucket: Creating...[0m[0m
[0m[1mmodule.s3_bucket.aws_s3_bucket.s3_bucket: Creation complete after 2s [id=deuna-iac-bucket][0m
[0m[1mmodule.s3_bucket.aws_s3_bucket_public_access_block.s3_public_block: Creating...[0m[0m
[0m[1mmodule.s3_bucket.aws_s3_bucket_policy.ssl_only_policy: Creating...[0m[0m
[0m[1mmodule.s3_bucket.aws_s3_bucket_versioning.s3_versioning: Creating...[0m[0m
[0m[1mmodule.s3_bucket.aws_s3_bucket_public_access_block.s3_public_block: Creation complete after 1s [id=deuna-iac-bucket][0m
[0m[1mmodule.s3_bucket.aws_s3_bucket_policy.ssl_only_policy: Creation complete after 1s [id=deuna-iac-bucket][0m
[0m[1mmodule.s3_bucket.aws_s3_bucket_versioning.s3_versioning: Creation complete after 2s [id=deuna-iac-bucket][0m
[0m[1mmodule.s3_bucket.aws_s3_bucket_object_lock_configuration.s3_object_lock: Creating...[0m[0m
[0m[1mmodule.s3_bucket.aws_s3_bucket_object_lock_configuration.s3_object_lock: Creation complete after 0s [id=deuna-iac-bucket][0m
[0m[1mmodule.kms.aws_kms_key.kms_key: Still creating... [00m10s elapsed][0m[0m
[0m[1mmodule.kms.aws_kms_key.kms_key: Creation complete after 14s [id=b92b91f2-9d8b-44c3-9285-c9c705855c48][0m
[0m[1mmodule.s3_bucket.aws_s3_bucket_server_side_encryption_configuration.s3_encryption: Creating...[0m[0m
[0m[1mmodule.aurora-postgresql.aws_rds_cluster.postgresql: Creating...[0m[0m
[0m[1mmodule.s3_bucket.aws_s3_bucket_server_side_encryption_configuration.s3_encryption: Creation complete after 0s [id=deuna-iac-bucket][0m
[0m[1mmodule.aurora-postgresql.aws_rds_cluster.postgresql: Still creating... [00m10s elapsed][0m[0m
[0m[1mmodule.aurora-postgresql.aws_rds_cluster.postgresql: Still creating... [00m20s elapsed][0m[0m
[0m[1mmodule.aurora-postgresql.aws_rds_cluster.postgresql: Still creating... [00m30s elapsed][0m[0m
[0m[1mmodule.aurora-postgresql.aws_rds_cluster.postgresql: Still creating... [00m40s elapsed][0m[0m
[0m[1mmodule.aurora-postgresql.aws_rds_cluster.postgresql: Creation complete after 43s [id=aurora-postgresql-deuna][0m
[0m[1mmodule.aurora-postgresql.aws_rds_cluster_instance.cluster_instance[0]: Creating...[0m[0m
[0m[1mmodule.aurora-postgresql.aws_rds_cluster_instance.cluster_instance[0]: Still creating... [00m10s elapsed][0m[0m
[0m[1mmodule.aurora-postgresql.aws_rds_cluster_instance.cluster_instance[0]: Still creating... [00m20s elapsed][0m[0m
[0m[1mmodule.aurora-postgresql.aws_rds_cluster_instance.cluster_instance[0]: Still creating... [00m30s elapsed][0m[0m
[0m[1mmodule.aurora-postgresql.aws_rds_cluster_instance.cluster_instance[0]: Still creating... [00m40s elapsed][0m[0m
[0m[1mmodule.aurora-postgresql.aws_rds_cluster_instance.cluster_instance[0]: Still creating... [00m50s elapsed][0m[0m
[0m[1mmodule.aurora-postgresql.aws_rds_cluster_instance.cluster_instance[0]: Still creating... [01m00s elapsed][0m[0m
[0m[1mmodule.aurora-postgresql.aws_rds_cluster_instance.cluster_instance[0]: Still creating... [01m10s elapsed][0m[0m
[0m[1mmodule.aurora-postgresql.aws_rds_cluster_instance.cluster_instance[0]: Still creating... [01m20s elapsed][0m[0m
[0m[1mmodule.aurora-postgresql.aws_rds_cluster_instance.cluster_instance[0]: Still creating... [01m30s elapsed][0m[0m
[0m[1mmodule.aurora-postgresql.aws_rds_cluster_instance.cluster_instance[0]: Still creating... [01m40s elapsed][0m[0m
[0m[1mmodule.aurora-postgresql.aws_rds_cluster_instance.cluster_instance[0]: Still creating... [01m50s elapsed][0m[0m
[0m[1mmodule.aurora-postgresql.aws_rds_cluster_instance.cluster_instance[0]: Still creating... [02m00s elapsed][0m[0m
[0m[1mmodule.aurora-postgresql.aws_rds_cluster_instance.cluster_instance[0]: Still creating... [02m10s elapsed][0m[0m
[0m[1mmodule.aurora-postgresql.aws_rds_cluster_instance.cluster_instance[0]: Still creating... [02m20s elapsed][0m[0m
[0m[1mmodule.aurora-postgresql.aws_rds_cluster_instance.cluster_instance[0]: Still creating... [02m30s elapsed][0m[0m
[0m[1mmodule.aurora-postgresql.aws_rds_cluster_instance.cluster_instance[0]: Still creating... [02m40s elapsed][0m[0m
[0m[1mmodule.aurora-postgresql.aws_rds_cluster_instance.cluster_instance[0]: Still creating... [02m50s elapsed][0m[0m
[0m[1mmodule.aurora-postgresql.aws_rds_cluster_instance.cluster_instance[0]: Still creating... [03m00s elapsed][0m[0m
[0m[1mmodule.aurora-postgresql.aws_rds_cluster_instance.cluster_instance[0]: Still creating... [03m10s elapsed][0m[0m
[0m[1mmodule.aurora-postgresql.aws_rds_cluster_instance.cluster_instance[0]: Still creating... [03m20s elapsed][0m[0m
[0m[1mmodule.aurora-postgresql.aws_rds_cluster_instance.cluster_instance[0]: Still creating... [03m30s elapsed][0m[0m
[0m[1mmodule.aurora-postgresql.aws_rds_cluster_instance.cluster_instance[0]: Still creating... [03m40s elapsed][0m[0m
[0m[1mmodule.aurora-postgresql.aws_rds_cluster_instance.cluster_instance[0]: Still creating... [03m50s elapsed][0m[0m
[0m[1mmodule.aurora-postgresql.aws_rds_cluster_instance.cluster_instance[0]: Still creating... [04m00s elapsed][0m[0m
[0m[1mmodule.aurora-postgresql.aws_rds_cluster_instance.cluster_instance[0]: Still creating... [04m10s elapsed][0m[0m
[0m[1mmodule.aurora-postgresql.aws_rds_cluster_instance.cluster_instance[0]: Still creating... [04m20s elapsed][0m[0m
[0m[1mmodule.aurora-postgresql.aws_rds_cluster_instance.cluster_instance[0]: Creation complete after 4m27s [id=aurora-postgresql-deuna-instance-1][0m
[0m[1m[32m
Apply complete! Resources: 9 added, 0 changed, 0 destroyed.
[0m[0m[1m[32m
Outputs:

[0mkms_key_arn = "arn:aws:kms:us-east-1:842675974385:key/b92b91f2-9d8b-44c3-9285-c9c705855c48"
rds_cluster_endpoint = "aurora-postgresql-deuna.cluster-conugmosog8v.us-east-1.rds.amazonaws.com"
rds_secret_arn = tolist([
  {
    "kms_key_id" = "arn:aws:kms:us-east-1:842675974385:key/b92b91f2-9d8b-44c3-9285-c9c705855c48"
    "secret_arn" = "arn:aws:secretsmanager:us-east-1:842675974385:secret:rds!cluster-a3b245ac-91f7-4bfd-a32b-d1cbe21965ee-H0TzWt"
    "secret_status" = "active"
  },
])
s3_bucket_name = "deuna-iac-bucket"
